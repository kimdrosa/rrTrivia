{"version":3,"sources":["Login.js","firebase_config.js","styles/Question.js","styles/Answer.js","styles/Answers.js","styles/H1.js","styles/QuestionPaper.js","styles/QuestionAndAnswers.js","styles/AdvancedQuestion.js","styles/Paper.js","styles/Score.js","styles/Count.js","styles/Button.js","styles/Time.js","QuizPage.js","styles/Button2.js","Home.js","Categories.js","App.js","reportWebVitals.js","index.js"],"names":["Login","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","props","React","Component","Question","styled","div","Answer","button","Answers","H1","h1","QuestionPaper","QuestionAndAnswers","AdvancedQuestion","Paper","Score","Count","Button","Time","QuizPage","isCorrect","bind","advanceRound","getQuestionsForRound","state","questions","currentQuestion","correct","score","numCorrect","numQuestions","isTimeUp","round","roundString","time","this","data","i","length","randIndex","Math","floor","random","temp","setState","results","advanced","j","push","q","ans","console","log","setTimeout","getAnswers","answers","answerA","answerB","answerC","answerD","currentQuestionIndex","style","color","to","fontSize","display","initialTime","direction","checkpoints","callback","Minutes","Seconds","question","map","answer","onClick","backgroundColor","border","fontWeight","Button2","Home","className","Categories","useState","category","setCategory","gridGap","gridTemplateColumns","rebelRappers","rrMix","hallOfFame","shutUpAndSing","App","exact","path","component","name","render","match","params","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fd2c8f0e.chunk.js","sourcesContent":["import React from 'react';\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport fireConfig from './firebase_config.js';\nimport App from './App.js';\n\nclass Login extends React.Component{\n    constructor(props){\n        super(props);\n    }\n\n    render(){\n        return (\n            <div></div>\n        //     <FirebaseAuthProvider firebase={firebase} {...config}>\n        //         {\n        //             <App/>\n        //         }\n        //     </FirebaseAuthProvider>\n\n        //     <FirebaseAuthConsumer>\n        //     {({ isSignedIn, user, providerId }) => {\n        //       return (\n        //         <pre style={{ height: 300, overflow: \"auto\" }}>\n        //           {JSON.stringify({ isSignedIn, user, providerId }, null, 2)}\n        //         </pre>\n        //       );\n        //     }}\n        //   </FirebaseAuthConsumer>\n        //   <IfFirebaseAuthedAnd\n        //   filter={({ providerId, user }) => {\n        //     if(!user.email){return false;}\n        //     return (\n        //       providerId !== \"anonymous\" &&\n        //       user.email.indexOf(\"@companyname.com\") > -1\n        //     );\n        //   }}\n        //   >\n        //  {({ isSignedIn, user, providerId }) => {\n        //    return (\n        //    //some jsx code\n        //    );\n        //  }}\n        // </IfFirebaseAuthedAnd>\n        )\n    }\n\n}\n\nexport default Login;","import firebase from \"firebase\";\n\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDg-tOKM0bDYI5JkPWsv_CpkpkVE7p3PkU\",\n    authDomain: \"rrtrivia.firebaseapp.com\",\n    projectId: \"rrtrivia\",\n    storageBucket: \"rrtrivia.appspot.com\",\n    messagingSenderId: \"83676546949\",\n    appId: \"1:83676546949:web:c94a5cfe7c8b1443e226ec\",\n    measurementId: \"G-NETL2F0MJ1\"\n  };\n\n  const fireConfig = firebase.initializeApp(firebaseConfig);\n\n  export default fireConfig;","import styled from 'styled-components';\nimport QuizPage from '../QuizPage';\n\nconst Question = styled.div`\n    text-align: center;\n   \n    /* border-radius: 5px; */\n    /* padding: 10px; */\n    font-size: 25px;\n    font-weight: 500;\n  \n    /* background-color: #e1e3e2; */\n    color: #292e29;\n`\n\nexport default Question;","import styled from 'styled-components';\n\nconst Answer = styled.button`\n    text-align: center;\n    background-color: white;\n    border-radius: 2px;\n    font-size: 25px;\n    border-style: solid;\n    border-color: black;\n    border-width: 2px;\n    width: 100%;\n    padding:14px;\n\n`\n\nexport default Answer;","import styled from 'styled-components';\n\nconst Answers = styled.div`\n    display: grid;\n    gap: 30px;\n    grid-template-columns: 1fr ;\n    margin: auto;\n\n\n    \n`\n\nexport default Answers;","import styled from 'styled-components';\n\nconst H1 = styled.h1`\n\nfont-family: 'Ariel', sans-serif;\nfont-weight: 900;\nfont-size: 50px;\ncolor: white;\ntext-align: center;\n`\n\nexport default H1;","import styled from 'styled-components';\n\nconst QuestionPaper = styled.div`\n    display: block;\n    background-color: white;\n    width: 70%;\n    box-shadow: 5px 10px 8px #888888;\n    margin: auto;\n    padding: 30px;\n    margin-top:80px;\n`\n\nexport default QuestionPaper;","import styled from 'styled-components';\n\nconst QuestionAndAnswers = styled.div`\n    display: grid;\n    grid-gap: 30px;\n\n    margin: auto;\n\n    \n`\n\nexport default QuestionAndAnswers;","import styled from 'styled-components';\n\nconst AdvancedQuestion = styled.div`\n    display: grid;\n    grid-gap: 30px;\n    /* background-color: #c1dec4; */\n    padding:20px;\n    margin: auto;\n    width: 70%;\n    box-shadow: 5px 10px 8px #888888;\n    margin-top: 80px;\n\n    \n`\n\nexport default AdvancedQuestion;","import styled from 'styled-components';\n\nconst Paper = styled.div`\n    display: block;\n    background-color: black;\n    text-align: center;\n    width: 80%;\n    box-shadow: 5px 10px 8px #888888;\n    margin: auto;\n    padding: 30px;\n    margin-top:100px;\n    border-radius: 5px;\n`\n\nexport default Paper;","import styled from 'styled-components';\n\nconst Score = styled.div`\n    text-align: left;\n    \n    font-size: 20px;\n    font-weight: 600;\n\n    margin-top: 10px;\n    border-radius: 3px;\n    color: indigo;\n\n`\n\nexport default Score;","import styled from 'styled-components';\n\nconst Count = styled.div`\n    margin-left:20px;\n    margin-top:20px;\n    text-align: left;\n    background-color: lightgray;\n    font-size: 25px;\n    font-weight: 500;\n    width: 120px;\n    padding:20px;\n    border-radius: 3px;\n\n`\n\nexport default Count;","import styled from 'styled-components';\n\nconst Button = styled.button`\n    background-color: black ;\n    border: solid;\n    font-size: 20px;\n    padding:15px;\n    /* width: 100px; */\n    color: #F37188;\n    border-radius: 5px;\n`\n \nexport default Button;","import styled from 'styled-components';\n\nconst Time = styled.div`\n    text-align: right;\n    margin-right: 70px;\n    margin-top: 0px;\n    font-size: 40px;\n    font-weight: 600;\n\n    margin-top: 10px;\n    border-radius: 3px;\n    color: indigo;\n\n`\n\nexport default Time;","import React from 'react';\nimport { render } from 'react-dom';\nimport { Link } from 'react-router-dom';\nimport Question from './styles/Question.js';\nimport Answer from './styles/Answer.js';\nimport Answers from './styles/Answers.js';\nimport H1 from './styles/H1.js';\nimport QuestionPaper from './styles/QuestionPaper.js'\nimport QuestionAndAnswers from './styles/QuestionAndAnswers.js';\nimport AdvancedQuestion from './styles/AdvancedQuestion.js';\nimport Paper from './styles/Paper.js';\nimport Score from './styles/Score.js';\nimport Count from './styles/Count.js';\nimport Button from './styles/Button.js';\nimport Time from './styles/Time.js';\nimport Timer from 'react-compound-timer';\n\n\n\n\n\nclass QuizPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.isCorrect = this.isCorrect.bind(this);\n        this.advanceRound = this.advanceRound.bind(this);\n        this.getQuestionsForRound = this.getQuestionsForRound.bind(this);\n        this.state = {\n            questions: [],\n            currentQuestion: 0,\n            correct: null,\n            score : 0,\n            numCorrect: 0,\n            numQuestions: 0,\n            isTimeUp: false,\n            round: 'basic',\n            roundString: '',\n            time: 240000\n           \n        };\n    }\n\n    componentDidMount() {\n      //randomize questions and store them\n      let questions = this.props.data;\n      for(var i = 0; i < questions.length; i++) {\n        let randIndex = Math.floor(Math.random() * questions.length);\n        let temp = questions[i];\n        questions[i] = questions[randIndex];\n        questions[randIndex] = temp;\n\n\n      }\n      this.setState({\n        questions : questions\n      })\n     \n    \n\n    }\n\n\n    advanceRound() {\n \n      if(this.state.round === 'basic') {\n    \n        this.setState({\n          round: 'radRound',\n          questions: [],\n          currentQuestion : 0,\n          roundString: 'Radical Round',\n          isTimeUp: false,\n          correct : null\n        })\n      \n      } else if(this.state.round === 'radRound') {\n        this.setState({\n          round: 'rebelRound',\n          questions : [],\n          roundString: 'Rebellion Round',\n          currentQuestion : 0,\n          isTimeUp: false,\n          correct : null\n        }) \n\n      } else if(this.state.round === 'rebelRound') {\n          this.setState({\n            round: 'resRound',\n            questions : [],\n            roundString: 'Resistance Round',\n            currentQuestion : 0,\n            isTimeUp: false,\n            correct : null\n          })\n      } else if(this.state.round === 'resRound') {\n        this.setState({\n          round: 'revRound',\n          roundString: 'Revolution Round',\n          questions : [],\n          currentQuestion : 0,\n          isTimeUp: false,\n          correct : null\n        })\n      }\n    }\n\n    getQuestionsForRound () {\n      let results = [];\n      let advanced = this.props.advanced;\n        for(var j = 0; j < advanced.length; j++) {\n       \n          if(advanced[j].round === this.state.round) {\n            results.push(advanced[j]);\n            \n          }\n        }\n   \n        for(var i = 0; i < results.length; i++) {\n          let randIndex = Math.floor(Math.random() * results.length);\n          let temp = results[i];\n          results[i] = results[randIndex];\n          results[randIndex] = temp;\n        }\n       \n      \n      this.setState({\n        questions : results\n      })\n    \n    }\n\n    //checks if clicked answer is the correct answer\n    isCorrect (q, ans){ \n      console.log(ans);\n      //NORMAL ROUND\n      if(this.state.round === 'basic') {\n        if(q === ans) {\n            this.setState({correct: true});\n         \n            setTimeout(()=>{\n              this.setState({\n                correct: null, \n                currentQuestion: this.state.currentQuestion + 1,\n                numCorrect: this.state.numCorrect + 1,\n                numQuestions: this.state.numQuestions + 1,\n                score : this.state.score + 100}\n                )},2000)\n\n        } else {\n            this.setState({correct: false});\n            setTimeout(() => {\n              this.setState({\n                correct: null,\n                currentQuestion: this.state.currentQuestion + 1,\n                numQuestions: this.state.numQuestions + 1}\n                )},2000)\n        }\n       //ADVANCED ROUND\n      } else {\n        if(q === ans) {\n          this.setState({correct: true});\n      } else {\n          this.setState({correct: false});\n      }\n\n      }\n    }\n        \n    \n\n    //returns: number of questions out of total, the score, the time remaining \n    //and the question with four answers\n    render () {\n    \n\n\n    //NORMAL ROUND\n    if(this.state.round === 'basic') {\n      function getAnswers() {\n        let answers = [];\n        answers.push(currentQuestion.answerA);\n        answers.push(currentQuestion.answerB);\n        answers.push(currentQuestion.answerC);\n        answers.push(currentQuestion.answerD);\n        for(var i = 0; i < answers.length; i++) {\n          let randIndex = Math.floor(Math.random() * answers.length);\n          let temp = answers[i];\n          answers[i] = answers[randIndex];\n          answers[randIndex] = temp;\n  \n  \n        }\n        currentQuestion.answers = answers;\n      }\n      let questions = this.state.questions;\n      let currentQuestionIndex = this.state.currentQuestion;\n      let currentQuestion = questions[currentQuestionIndex];\n      \n    if((currentQuestionIndex === questions.length || this.state.isTimeUp) && this.state.score <= 500){\n      return(\n        <Paper>\n          <H1>Beginner</H1>\n          <h2 style={{color:'white'}}> Your final score was {this.state.score}</h2>\n          <Link to={'/rrTrivia'}>\n          <Button>Play Again?</Button>\n          </Link>\n        </Paper>\n      )\n    } else if((currentQuestionIndex === questions.length || this.state.isTimeUp) && (this.state.score > 500 && this.state.score <= 1000)){\n      return(\n        <Paper>\n          <H1>Not Bad!</H1>\n          <h2 style={{color:'white'}}> Your final score was {this.state.score}</h2>\n          <Link to={'/rrTrivia'}>\n          <Button>Play Again?</Button>\n          </Link>\n        </Paper>\n      )\n    }  else if((currentQuestionIndex === questions.length || this.state.isTimeUp) && (this.state.score > 1000 && this.state.score <= 1400)){\n      return(\n        <Paper>\n          <H1>Good!</H1>\n          <h2 style={{color:'white'}}> Your final score was {this.state.score}</h2>\n          <Link to={'/'}>\n          <Button>Play Again?</Button>\n          </Link>\n        </Paper>\n      )\n    }  \n    \n\n     else if((currentQuestionIndex === questions.length || this.state.isTimeUp) && this.state.score >= 1500){\n        setTimeout(this.advanceRound(), 5000)\n        \n\n      return(\n          <Paper>\n            <h1 style={{color:'white', fontSize:'50px'}}>Excellent!</h1>\n            <h2 style={{color:'white'}}> Your final score was {this.state.score}, Welcome to Sudden Death!!</h2>\n          </Paper>\n        ) \n      } else if(questions.length > 0) {\n          if(!currentQuestion.answers){\n            getAnswers();\n          }\n      console.log(currentQuestion.answerA);\n    return(\n    <div>\n      <div style={{display:'inline'}}>\n        <Count>{this.state.numQuestions}/{this.state.questions.length}\n        <Score>Score: {this.state.score}</Score></Count>\n        <Time>\n        <Timer   initialTime={this.state.time}\n          direction=\"backward\"\n\n          checkpoints={[\n            {time: 0,\n            callback: () => {this.setState({isTimeUp: true})}}\n          ]}>\n        <Timer.Minutes /> \n      :\n        <Timer.Seconds />\n        </Timer>\n        </Time>\n      </div>\n\n    <QuestionPaper>\n      <QuestionAndAnswers>\n       <Question>{currentQuestion.question}</Question>\n       <Answers>\n       {currentQuestion.answers.map((answer) => {\n           if(this.state.correct === null) {\n         return <Answer key={Math.random()} onClick={()=>{this.isCorrect(currentQuestion.correct, answer)}}>{answer}</Answer>\n           } else if(this.state.correct === true)  {\n               if(answer === currentQuestion.correct) {\n               return <Answer style={{backgroundColor:'green', border:'none', color:'white'}} key={Math.random()} >{answer}</Answer>\n               } else {\n                   return <Answer style={{backgroundColor:'#b3b5b4', border:'none', color:'white'}} key={Math.random()} >{answer}</Answer>\n               }\n           }  else if(this.state.correct === false)  {\n            if(answer === currentQuestion.correct) {\n                return <Answer style={{backgroundColor:'#07b822', border:'none', color:'white'}} key={Math.random()} >{answer}</Answer>\n                } else {\n            return <Answer style={{backgroundColor:'#fc8f8d', border:'none', color:'white'}} key={Math.random()} >{answer}</Answer>\n                }\n        }\n       })}\n       </Answers>\n       </QuestionAndAnswers>\n       </QuestionPaper>\n    \n       </div>\n\n    )\n      } else {\n        return <p> Please Wait ...</p>\n      }\n\n\n\n    //ADVANCED ROUND\n    } else {\n      function getAnswers() {\n        let answers = [];\n        answers.push(currentQuestion.answerA);\n        answers.push(currentQuestion.answerB);\n        answers.push(currentQuestion.answerC);\n        answers.push(currentQuestion.answerD);\n        for(var i = 0; i < answers.length; i++) {\n          let randIndex = Math.floor(Math.random() * answers.length);\n          let temp = answers[i];\n          answers[i] = answers[randIndex];\n          answers[randIndex] = temp;\n  \n  \n        }\n        currentQuestion.answers = answers;\n      }\n\n\n      let questions = this.state.questions;\n      let currentQuestionIndex = this.state.currentQuestion;\n      let currentQuestion = questions[currentQuestionIndex];\n      \n      console.log('hello from render', this.state.round)\n      if(this.state.correct === false) {\n        return(\n          <Paper>\n            <h2 style={{color:'white'}}> Wrong Answer :(</h2>\n            <h2 style={{color:'white'}}> Your final score was {this.state.score}</h2>\n            <Link to={'/rrTrivia'}>\n              <Button>Play Again?</Button>\n            </Link>\n          </Paper>\n        )\n    \n      }  \n      else if(this.state.correct === true && this.state.round === 'revRound'){\n        return(\n          <Paper>\n            <h1 style={{color:'white', fontSize:'50px'}}>Rock On!</h1>\n            <h2 style={{color:'white'}}> You answered all of the advanced questions correctly!</h2>\n            <h2 style={{color:'white'}}> Your final score is {this.state.score}</h2>\n      \n          </Paper>\n        ) }\n       else if(this.state.correct === true){\n        setTimeout(this.advanceRound(), 5000)\n        return(\n          <Paper>\n            <h1 style={{color:'white', fontSize:'50px'}}>Rock On!</h1>\n            <h2 style={{color:'white'}}> You answered right!</h2>\n            <h2 style={{color:'white'}}> Your score is {this.state.score}</h2>\n            \n          </Paper>\n        ) }\n        else if(questions.length > 0) {\n          if(!currentQuestion.answers){\n            getAnswers();\n          }\n        console.log(currentQuestion.answerA);\n      return(\n      <div>\n        <div style={{display:'inline'}}>\n          <Count>{this.state.numQuestions}/{this.state.questions.length}\n          <Score>Score: {this.state.score}</Score></Count>\n        </div>\n  \n     \n        <AdvancedQuestion>\n          <H1 style={{color:'purple', fontWeight:'1200'}}>{this.state.roundString}</H1>\n         <Question>{currentQuestion.question}</Question>\n          <Answers>\n            {currentQuestion.answers.map((answer) => {\n              if(this.state.correct === null) {\n                return <Answer key={Math.random()} onClick={()=>{this.isCorrect(currentQuestion.correct, answer)}}>{answer}</Answer>\n              } else if(this.state.correct === true)  {\n                  if(answer === currentQuestion.correct) {\n                      return <Answer style={{backgroundColor:'green', border:'none', color:'white'}} key={Math.random()} >{answer}</Answer>\n                      } else {\n                          return <Answer style={{backgroundColor:'#b3b5b4', border:'none', color:'white'}} key={Math.random()} >{answer}</Answer>\n                      }\n                  }  else if(this.state.correct === false)  {\n                    if(answer === currentQuestion.correct) {\n                        return <Answer style={{backgroundColor:'#07b822', border:'none', color:'white'}} key={Math.random()} >{answer}</Answer>\n                        } else {\n                    return <Answer style={{backgroundColor:'#fc8f8d', border:'none', color:'white'}} key={Math.random()} >{answer}</Answer>\n                        }\n                }\n              })}\n            </Answers>\n            </AdvancedQuestion>\n      \n      \n         </div>\n  \n      )\n        } else {\n          this.getQuestionsForRound()\n          return <p> Please Wait ...</p>\n        }\n\n    }\n  }\n}\n\nexport default QuizPage;","import styled from 'styled-components';\n\nconst Button2 = styled.button`\n    background-color: black ;\n    border: solid;\n    font-size: 25px;\n    padding:20px;\n    /* width: 100px; */\n    color: white;\n    border-radius: 5px;\n`\n \nexport default Button2;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport H1 from './styles/H1.js';\nimport Paper from './styles/Paper.js';\nimport Button from './styles/Button.js';\nimport Button2 from './styles/Button2.js';\n\nclass Home extends React.Component{\n    constructor(props) {\n        super(props);\n\n    }\n\n    render() {\n        return (\n            <div className=\"Home\">\n                <Paper>\n                    <H1>Rebel Rock Trivia</H1>\n                    <h3 style={{color:'white'}}> The trivia game where politics and music collide</h3> \n                    <Link to='/categories'>\n                        <Button onClick={() => {console.log('enter')}}>Enter</Button>\n                    </Link>\n                </Paper>\n            </div>\n        )\n    }\n\n}\n\nexport default Home;","import React, { useState } from 'react';\nimport H1 from './styles/H1.js';\nimport Paper from './styles/Paper.js';\nimport { Link } from 'react-router-dom'\nimport Button from './styles/Button.js';\nimport Button2 from './styles/Button2.js';\nimport fireConfig from './firebase_config.js';\nimport questions from './questions/questions.json';\nimport rebelRappers from './questions/rebelRappers.json';\nimport rrMix from './questions/rrMix.json';\nimport advanced from './questions/advanced.json';\nimport shutUpAndSing from './questions/shutUpAndSing.json';\nimport hallOfFame from './questions/hallOfFame.json'\nimport QuizPage from './QuizPage.js';\n\n\nfunction Categories() {\n    const [category, setCategory] = useState(null);\n\n    if(category === null) {\n    return(\n           \n   \n        <div className=\"Categories\">\n\n   \n        <Paper>\n          <H1>Choose a Category </H1>\n          <div style={{display:\"grid\", gridGap:\"20px\", gridTemplateColumns:\"1fr 1fr\"}}>\n        \n            <Button2 onClick={() => {setCategory(rebelRappers)}}> Rebel Rappers </Button2>\n      \n\n        \n            <Button2 onClick={() => {setCategory(rrMix)}}> Rebel Rock Mix </Button2>\n       \n\n          \n            <Button2 onClick={() => {setCategory(hallOfFame)}}> Hall of Fame </Button2>\n         \n\n           \n            <Button2 onClick={() => {setCategory(shutUpAndSing)}}> Shut Up And Sing </Button2>\n          \n          </div>\n        </Paper>\n    </div>\n    )\n    } else {\n        return <QuizPage data={category} advanced={advanced}/>\n    }\n\n\n}\n\n\n\nexport default Categories;","\nimport './App.css';\nimport React, {useState} from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport Login from './Login.js';\nimport QuizPage from './QuizPage.js';\nimport Home from './Home.js';\nimport Categories from './Categories.js'\n\n\n\n\nfunction App() {\n\n  return (\n    <Router>\n      <Route exact path=\"/rrTrivia\" component={Home}/> \n      <Route exact path=\"/login\" component={Login}/> \n      <Route exact path=\"/quizPage\" component={QuizPage}/>\n      <Route\n              exact\n              path=\"/quizPage/:category\"\n              name=\"quizPage\"\n              render={(props) => {\n                console.log(props);\n                const category = props.match.params.category;\n                console.log(category)\n                return (\n                  <div>\n                    <QuizPage data/>\n                  </div>\n                );\n              }}\n            />\n      <Route exact path=\"/categories\" component={Categories}/>  \n    </Router>\n  )\n\n \n \n  // const [enter, setEnter] = useState(false);\n  // const [play, setPlay] =  useState(false);\n  // const [category, setCategory] = useState(questions);\n  // const [user, setUser] = useState(null);\n \n  // fireConfig.auth().onAuthStateChanged((user) => {\n  //   user ? setUser(user) : setUser(null);\n  // })\n\n  // if(enter) {\n  //   return (\n     \n  //     <div className=\"App\">\n\n   \n  //         <Paper>\n  //           <H1>Choose a Category </H1>\n  //           <div style={{display:\"grid\", gridGap:\"20px\", gridTemplateColumns:\"1fr 1fr\"}}>\n  //           <Button2 onClick={() => {setPlay(true); setEnter(false); setCategory(rebelRappers)}}> Rebel Rappers </Button2>\n  //           <Button2 onClick={() => {setPlay(true); setEnter(false); setCategory(rrMix)}}> Rebel Rock Mix </Button2>\n  //           <Button2 onClick={() => {setPlay(true); setEnter(false); setCategory(hallOfFame)}}> Hall of Fame </Button2>\n  //           <Button2 onClick={() => {setPlay(true); setEnter(false); setCategory(shutUpAndSing)}}> Shut Up And Sing </Button2>\n  //           </div>\n  //         </Paper>\n         \n       \n      \n  //     </div>\n     \n  //   );\n   \n  // } else if(play){\n  //   return (\n  //     <QuizPage data={category} advanced={advanced}> </QuizPage>)\n  // }else {\n  //   return (\n  //     <div className=\"App\">\n        \n  //       <Paper>\n  //       <H1>Rebel Rock Trivia</H1>\n  //       <h3 style={{color:'white'}}> The trivia game where politics and music collide</h3> \n  //       <Button onClick={() => {setEnter(true)}}>Enter</Button>\n  //       </Paper>\n\n        \n  //   </div>\n  //   )\n  \n  // }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}